collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library("pasilla")
pasCts <- system.file("extdata",
"pasilla_gene_counts.tsv",
package="pasilla", mustWork=TRUE)
pasAnno <- system.file("extdata",
"pasilla_sample_annotation.csv",
package="pasilla", mustWork=TRUE)
cts <- as.matrix(read.csv(pasCts,sep="\t",row.names="gene_id"))
coldata <- read.csv(pasAnno, row.names=1)
coldata <- coldata[,c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
library("pasilla")
pasCts <- system.file("extdata",
"pasilla_gene_counts.tsv",
package="pasilla", mustWork=TRUE)
pasAnno <- system.file("extdata",
"pasilla_sample_annotation.csv",
package="pasilla", mustWork=TRUE)
cts <- as.matrix(read.csv(pasCts,sep="\t",row.names="gene_id"))
coldata <- read.csv(pasAnno, row.names=1)
coldata <- coldata[,c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
coldata
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
coldata
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
coldata %>% class
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata
# coldata$condition <- factor(coldata$condition)
# coldata$type <- factor(coldata$type)
# coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata %>% class
# coldata$condition <- factor(coldata$condition)
# coldata$type <- factor(coldata$type)
# coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata %>% matrix
# coldata$condition <- factor(coldata$condition)
# coldata$type <- factor(coldata$type)
# coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")]
coldata %>% as.matrix
# coldata$condition <- factor(coldata$condition)
# coldata$type <- factor(coldata$type)
# coldata %>% matrix
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
cts <- as.matrix(read.csv(pasCts,sep= "\t",row.names = "gene_id"))
coldata <- read.csv(pasAnno, row.names = 1)
coldata <- coldata[ , c("condition","type")] %>% as.matrix
cts
cts %>% class
# loads files from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% head
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
coldata
ContrApption(data = data, annotation = coldata, groupCol = "condition")
ContrApption(data = cts, annotation = coldata, groupCol = "condition")
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% head
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
coldata
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
coldata
cts %>% class
coldata %>% class
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% head
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
coldata
cts %>% class
coldata %>% class
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% head
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
coldata
cts %>% class
coldata %>% class
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
cts %>% class
coldata$type
devtools::install()
ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
coldata
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts, annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition", idCol = NULL)
devtools::install(); ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
devtools::install(); ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata$interaction <- paste0(coldata[, "condition"], coldata[, "type"])
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata
coldata[, "interaction"] <- paste0(coldata[, "condition"], coldata[, "type"])
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
paste0(coldata[, "condition"], coldata[, "type"])
coldata[, "interaction"] <- paste0(coldata[, "condition"], ":", coldata[, "type"])
coldata[, "interaction"] <- paste0(coldata[, "condition"], ":", coldata[, "type"])
coldata[, 3] <- paste0(coldata[, "condition"], ":", coldata[, "type"])
coldata
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata[, 3] <- paste0(coldata[, "condition"], ":", coldata[, "type"])
paste0(coldata[, "condition"], ":", coldata[, "type"])
coldata <- coldata %>% data.frame
coldata <- paste0(coldata$condition, ":", coldata$type)
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata <- coldata %>% data.frame
coldata$interaction <- paste0(coldata$condition, ":", coldata$type)
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "interaction")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id"))
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% as.matrix
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata <- coldata %>% data.frame
coldata$interaction <- paste0(coldata$condition, ":", coldata$type)
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "interaction")
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id")) %>% data.frame
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% data.frame
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id")) %>% data.frame
cts %>% colnames()
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% data.frame
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
coldata <- coldata %>% data.frame
coldata$interaction <- paste0(coldata$condition, ":", coldata$type)
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "interaction")
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id")) %>% data.frame
cts %>% head
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id")) %>% data.frame
cts %>% head
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% data.frame
# remove un-needed characters
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "condition")
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "type")
# derive a new variable - every combitation of condition and type
coldata$interaction <- paste0(coldata$condition, ":", coldata$type)
coldata %>% head
ContrApption(data = cts[1:100, ], annotation = coldata, groupCol = "interaction")
ContrApption(data = cts, annotation = coldata, groupCol = "interaction")
browseVignettes("ContrApption")
devtools::build()
browseVignettes("ContrApption")
devtools::install()
browseVignettes("ContrApption")
library(ContrApption)
browseVignettes("ContrApption")
browseVignettes("DESeq2")
devtools::build()
getwd()
tools::buildVignettes(dir = ".", tangle=TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names=TRUE), "inst/doc", overwrite=TRUE)
browseVignettes("DESeq2")
browseVignettes("ContrApption")
tools::buildVignettes(dir = ".", tangle=TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names=TRUE), "inst/doc", overwrite=TRUE)
remotes::install_local()
remotes::install_local(force = TRUE)
browseVignettes("ContrApption")
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ContrApption)
library(DESeq2)
library(pasilla)
library(dplyr)
# loads counts file from the pasilla package
pasCts <- system.file("extdata", "pasilla_gene_counts.tsv", package = "pasilla", mustWork = TRUE)
# reads counts of genes as a matrix
cts <- as.matrix(read.csv(pasCts, sep = "\t", row.names = "gene_id")) %>% data.frame
cts %>% head
# loads sample annotation from the pasilla package
pasAnno <- system.file("extdata", "pasilla_sample_annotation.csv", package = "pasilla", mustWork = TRUE)
# read in the sample data
coldata <- read.csv(pasAnno, row.names = 1)
# select relevant columns
coldata <- coldata[ , c("condition","type")] %>% data.frame
# remove un-needed characters
rownames(coldata) <- gsub("fb", "", rownames(coldata))
coldata
ContrApption(data = cts, annotation = coldata, groupCol = "condition")
ContrApption(data = cts, annotation = coldata, groupCol = "type")
# derive a new variable - every combitation of condition and type
coldata$interaction <- paste0(coldata$condition, ":", coldata$type)
coldata %>% head
ContrApption(data = cts, annotation = coldata, groupCol = "interaction")
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
devtools::install()
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
devtools::build()
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
devtools::build()
browseVignettes("ContrApption")
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
browseVignettes("ContrApption")
tools::buildVignettes(dir = ".", tangle = TRUE)
dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
remotes::install_local()
source('~/Dropbox (Partners HealthCare)/Workspace/RPackages/ContrApption/build.R', echo=TRUE)
browseVignettes("ContrApption")
# build vignette
tools::buildVignettes(dir = ".", tangle = TRUE)
# dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
remotes::install_local(force = TRUE)
browseVignettes("ContrApption")
remove.packages("ContrApption")
devtools::install()
devtools::install()
getwd()
devtools::install()
# build vignette
tools::buildVignettes(dir = ".", tangle = TRUE)
# dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
remotes::install_local(force = TRUE)
browseVignettes("ContrApption")
# build vignette
tools::buildVignettes(dir = ".", tangle = TRUE)
# dir.create("inst/doc")
file.copy(dir("vignettes", full.names = TRUE), "inst/doc", overwrite = TRUE)
remotes::install_local(force = TRUE)
browseVignettes("ContrApption")
devtools::install()
browseVignettes("ContrApption")
evtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
browseVignettes("ContrApption")
